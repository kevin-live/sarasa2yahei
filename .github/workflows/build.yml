name: build sarasa2yahei
on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  job1:
    runs-on: ubuntu-latest

    outputs:
      local_tag: ${{ steps.get_local_tag.outputs.tag }}
      upstream_tag: ${{ steps.get_upstream_tag.outputs.tag }}
      sc_download_url: ${{ steps.get_sc_download_url.outputs.url }}

    steps:
      - name: Get Local Tag
        id: get_local_tag
        run: |
          LOCAL_LATEST_TAG=$(curl -s https://api.github.com/repos/kevin-live/sarasa2yahei/releases/latest | jq -r '.tag_name')
          echo "tag=$LOCAL_LATEST_TAG" >> "$GITHUB_OUTPUT"
          echo $LOCAL_LATEST_TAG

      - name: Get Upstream Tag
        id: get_upstream_tag
        run: |
          UPSTREAM_LATEST_TAG=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.tag_name')
          echo "tag=$UPSTREAM_LATEST_TAG" >> "$GITHUB_OUTPUT"
          echo $UPSTREAM_LATEST_TAG

      - name: Get SC Download URL
        id: get_sc_download_url
        run: |
          DOWNLOAD_URL_SC=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | contains("SarasaUiSC-TTF-") and (contains("SarasaUiSC-TTF-Unhinted") | not)) | .browser_download_url')
          echo "url=$DOWNLOAD_URL_SC" >> "$GITHUB_OUTPUT"
          echo $DOWNLOAD_URL_SC
          
  job2:
    runs-on: ubuntu-latest
    needs: job1
    if: ${{ needs.job1.outputs.local_tag != needs.job1.outputs.upstream_tag }}

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get install -y fontforge python3-fontforge p7zip-full

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and Extract Sarasa Fonts
        run: |
          mkdir /tmp/fonts
          DL_DIR=/tmp/fonts
          echo "DL_DIR=$DL_DIR" >> $GITHUB_ENV
          mkdir /tmp/fonts/sc
          DL_DIR_SC=/tmp/fonts/sc
          echo "DL_DIR_SC=$DL_DIR_SC" >> $GITHUB_ENV
          cd $DL_DIR
          echo $DL_DIR && echo $DL_DIR_SC
          curl -Lvo sc-fonts.7z ${{ needs.job1.outputs.sc_download_url }}
          7z e sc-fonts.7z SarasaUiSC-Regular.ttf SarasaUiSC-Light.ttf SarasaUiSC-Bold.ttf
          for file in *; do
            if [ -f "$file" ]; then
              echo $file
            fi
          done

      - name: Generate Patched SC Fonts
        run: |
          python3 exec_sc.py

      - name: Compress SC Fonts
        run: |
          cd $DL_DIR_SC
          7z a sc-yahei-simsun-${{ needs.job1.outputs.upstream_tag }}.7z msyh* simsun*

      - name: Calculate SHA1
        run: |
          cd $DL_DIR
          find "$DL_DIR_SC" -type f -name "*.7z" > filelist.txt
          while read -r file; do
            filename=$(basename "$file")
            sha1=$(sha1sum "$file" | awk '{print $1}')
            echo "> - $filename: \`$sha1\`" >> sha1.txt
          done < filelist.txt

      - name: Release Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.job1.outputs.upstream_tag }}
          prerelease: false
          name: sarasa2yahei-${{ needs.job1.outputs.upstream_tag }}
          body_path: ${{ env.DL_DIR }}/sha1.txt
          files: |
            ${{ env.DL_DIR_SC }}/*.7z

